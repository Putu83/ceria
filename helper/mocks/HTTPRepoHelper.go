// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import gin "github.com/gin-gonic/gin"

import http "net/http"
import httptest "net/http/httptest"
import mock "github.com/stretchr/testify/mock"
import testing "testing"

// HTTPRepoHelper is an autogenerated mock type for the HTTPRepoHelper type
type HTTPRepoHelper struct {
	mock.Mock
}

// TestHttpResponse provides a mock function with given fields: t, r, req, f
func (_m *HTTPRepoHelper) TestHttpResponse(t *testing.T, r *gin.Engine, req *http.Request, f func(*httptest.ResponseRecorder) (bool, error)) error {
	ret := _m.Called(t, r, req, f)

	var r0 error
	if rf, ok := ret.Get(0).(func(*testing.T, *gin.Engine, *http.Request, func(*httptest.ResponseRecorder) (bool, error)) error); ok {
		r0 = rf(t, r, req, f)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TestHttpResponseManual provides a mock function with given fields: r, method, path
func (_m *HTTPRepoHelper) TestHttpResponseManual(r http.Handler, method string, path string) *httptest.ResponseRecorder {
	ret := _m.Called(r, method, path)

	var r0 *httptest.ResponseRecorder
	if rf, ok := ret.Get(0).(func(http.Handler, string, string) *httptest.ResponseRecorder); ok {
		r0 = rf(r, method, path)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*httptest.ResponseRecorder)
		}
	}

	return r0
}
